




Clock.bpm=113
Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	print('Ejecutando parte 0')
	d0 >> charm([(-60,), (11,), (13,), (14,), (-60,), (16,), (18,), (18,), (14,)],dur=[Fraction(2, 3), Fraction(2, 3), Fraction(2, 3), Fraction(2, 3), 0.0, Fraction(2, 3), Fraction(2, 3), 3.0, 1.0],amp=[0, 1, 1, 1, 0, 1, 1, 1, 1])
	d1 >> viola([(-60,), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10)],dur=[4.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.5],amp=[0, 1, 1, 1, 1, 1, 1, 1, 1])
@structure
def a1():
	print('Ejecutando parte 1')
	d0 >> charm([(21,), (21,), (18,), (21,), (18,)],dur=[4.0, 2.0, 1.0, 0.5, 0.5],amp=[1, 1, 1, 1, 1])
	d1 >> viola([(-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -3), (-10, -3), (-10, -3), (-10, -3)],dur=[0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
@structure
def a2():
	print('Ejecutando parte 2')
	b1 >> play('x ')
	b2 >> play('( |S4|) ', amp=0.3)
	d0 >> charm([(14,), (11,), (14,), (16,), (18,), (18,), (23,)],dur=[2.5, 0.5, 0.5, 0.5, 3.0, 0.75, 0.25],amp=[1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10)],dur=[0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
@structure
def a3():
	print('Ejecutando parte 3')
	d0 >> charm([(21,), (18,), (21,), (18,), (21,), (18,)],dur=[2.0, 2.0, 2.0, 1.0, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1])
	d1 >> viola([(-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -3), (-10, -3), (-10, -3), (-10, -3)],dur=[0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
@structure
def a4():
	print('Ejecutando parte 4')
	d0 >> charm([(14,), (18,), (-60,), (14,), (18,), (-60,), (14,), (18,), (14,), (18,)],dur=[4.0, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.5, 1.25],amp=[1, 1, 0, 1, 1, 0, 1, 1, 1, 1])
	d1 >> viola([(-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-15, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-11,)],dur=[0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.75, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
@structure
def a5():
	print('Ejecutando parte 5')
	d0 >> charm([(18,), (-60,), (14,), (18,), (-60,), (14,), (18,), (14,), (18,), (18,), (-60,), (18,), (18,), (18,), (18,), (-60,), (18,), (18,), (18,)],dur=[0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.5, 1.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.25, 0.25, 0.5, 0.25, 0.75],amp=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1])
	d1 >> viola([(-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -3), (-10, -3), (-10, -3), (-10, -3)],dur=[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
@structure
def a6():
	print('Ejecutando parte 6')
	d0 >> charm([(14,), (11,), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-1, 2), (-1, 2), (-1, 2), (-1, 2), (-1, 2), (-1, 2), (-1, 2), (1,)],dur=[1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(-17, -10), (-17, -10), (-17, -10), (-17, -10), (-60,), (6,), (-60,), (2,), (6,), (-60,), (2,), (6,), (2,), (6,)],dur=[0.5, 0.5, 0.5, 0.5, 2.0, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.5, 1.25],amp=[1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1])
@structure
def a7():
	print('Ejecutando parte 7')
	d0 >> viola([(2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 9), (2, 9), (2, 9), (2, 9)],dur=[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(6,), (-60,), (2,), (6,), (-60,), (2,), (6,), (2,), (6,), (6,), (-60,), (6,), (6,), (6,), (9,), (-60,), (9,), (9,), (6,)],dur=[0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.5, 1.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.25, 0.25, 0.5, 0.25, 0.75],amp=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1])
@structure
def a8():
	print('Ejecutando parte 8')
	v1 >> loop("estribillo2",P[0:8],amp=6)
	d0 >> viola([(-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-60,), (2,), (-1,), (2,), (-13, -10), (-1,), (2,), (6,)],dur=[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2.0, 0.5, 0.5, 0.25, 0.75],amp=[1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(2,), (-1,), (-60,), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-60,), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10)],dur=[1.0, 2.0, 1.0, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25],amp=[1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1])
@structure
def a9():
	print('Ejecutando parte 9')
	v1 >> loop("estribillo2",P[8:16],amp=6)
	d0 >> viola([(9,), (9,), (9,), (9,), (9,), (9,), (9,), (6,)],dur=[4.0, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-15, -10)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
@structure
def a10():
	print('Ejecutando parte 10')
	v1 >> loop("estribillo2",P[16:24],amp=6)
	d0 >> viola([(2,), (-1,), (2,), (-1,), (2,), (-13, -10), (-1,), (2,), (6,)],dur=[1.0, 2.0, 0.5, 0.5, 2.0, 0.5, 0.5, 0.25, 0.75],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-15, -10), (-15, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-13, -10), (-60,), (-13, -10), (-13, -10), (-13, -10), (-11,), (-11,)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1])
@structure
def a11():
	print('Ejecutando parte 11')
	v1 >> loop("estribillo2",P[24:32],amp=6)
	d0 >> viola([(9,), (6,), (2,), (9,), (9,), (9,), (9,), (9,), (9,), (2,)],dur=[1.0, 1.0, 2.0, 0.5, 1.0, 0.5, 0.5, 0.5, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -6), (-10, -3), (-10, -3), (-10, -3), (-10, -3), (-15, -10)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
@structure
def a12():
	print('Ejecutando parte 12')
	v1.stop()
        v2.stop()
        v3.stop()
	d0 >> viola([(-1,), (-15, -10), (-15, -10), (-15, -10), (4,), (4,), (4,), (4,), (4,), (4,), (4,), (4,), (4,), (4,), (4,), (4,)],dur=[3.0, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-17, -10), (-60,), (7,), (7,), (-60,), (6,), (-60,), (4,), (-60,), (-1,), (2,)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 1.0, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 1.0, 1.0],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1])
@structure
def a13():
	print('Ejecutando parte 13')
	d0 >> viola([(2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4, 13, 16), (-60,), (4,), (4,), (4,), (4,), (4,), (4,)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.5, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(2,), (2,), (1,), (7,), (7,), (-60,), (6,), (-60,), (4,), (-60,)],dur=[1.0, 1.0, 4.0, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25],amp=[1, 1, 1, 1, 1, 0, 1, 0, 1, 0])
@structure
def a14():
	print('Ejecutando parte 14')
	d0 >> viola([(4,), (4,), (4,), (4,), (4,), (4,), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (2, 6), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (4,), (4,), (4,), (4,), (4,), (4,)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(-1,), (2,), (2,), (4,), (-3,), (-5,)],dur=[1.0, 1.0, 1.0, 1.0, 2.0, 2.0],amp=[1, 1, 1, 1, 1, 1])
@structure
def a15():
	print('Ejecutando parte 15')
	d0 >> viola([(4,), (4,), (4,), (4,), (4,), (4,), (2,), (2,), (2,), (2,), (2,), (2,), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(-5,), (2,), (2,), (4,), (1,), (2,)],dur=[1.0, 1.0, 1.0, 1.0, 1.0, 3.0],amp=[1, 1, 1, 1, 1, 1])
@structure
def a16():
	print('Ejecutando parte 16')
	d0 >> viola([(-1, 2), (-1, 2), (-1, 2), (-1, 2), (-1, 2), (-1, 2), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (-3, 4), (2,), (2,), (2,), (2,), (2,), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.5, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25],amp=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
	d1 >> viola([(6,), (2,), (1,), (-3,), (-1,), (-3,), (-60,), (-6,), (-5,)],dur=[1.0, 1.0, 1.0, 1.0, 1.0, 0.25, 0.25, 1.0, 1.5],amp=[1, 1, 1, 1, 1, 1, 0, 1, 1])
@structure
def a17():
	print('Ejecutando parte 17')
	d0 >> viola([(-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-5, 2), (-60,), (-5, 2), (-5, 2), (-60,), (-5, 2), (-60,), (-5, 2)],dur=[0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 1.0, 0.25, 0.25, 1.0, 0.25, 0.25, 0.25, 0.25, 2.5],amp=[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1])
	d1 >> viola([(-5,), (7,), (6,), (-60,), (2,), (7,), (-60,), (6,), (-60,), (2,)],dur=[2.0, 1.0, 0.25, 0.25, 1.0, 0.25, 0.25, 0.25, 0.25, 2.5],amp=[1, 1, 1, 0, 1, 1, 0, 1, 0, 1])
def f0():
    Clock.clear()
Clock.clear()

### CANCION ###

intro = [ a0, a1, a2, a3 ]
verso = [ a4, a5, a6, a7 ]
estribillo = [ a8, a9, a10, a11, a12, a13, a14, a15 ]
resto = [ a16, a17 ]
final = [f0]
cancion = intro +  verso + estribillo + resto + intro + verso + estribillo + final
#cancion = estribillo + estribillo

## EFECTOS ##

def efecto1():
    v2 >> loop("estribillo2",P[0:8],amp=6,slide=0.1)
    v3 >> loop("estribillo2",P[0:8],amp=6,slide=0.15)
def efecto2():
    v2 >> loop("estribillo2",P[8:16],amp=6,slide=0.1)
    v3 >> loop("estribillo2",P[8:16],amp=6,slide=0.15)
def efecto3():
    v2 >> loop("estribillo2",P[16:24],amp=6,slide=0.1)
    v3 >> loop("estribillo2",P[16:24],amp=6,slide=0.15)
def efecto4():
    v2 >> loop("estribillo2",P[24:32],amp=6,slide=0.1)
    v3 >> loop("estribillo2",P[24:32],amp=6,slide=0.15)

efectos = {
    "a8": {"efecto": efecto1, "vuelta": 1},
    "a9": {"efecto": efecto2, "vuelta": 1},
    "a10": {"efecto": efecto3, "vuelta": 1},
    "a11": {"efecto": efecto4, "vuelta": 1}
}

### RESET ###

def reset():
    pass

def countRepetitions(fname,cancion):
    fnames = list(map(lambda x : x.__name__,cancion))
    return fnames.count(fname)
def reproducir(cancion,efectos,reset,start):
    reset()
    if len(cancion) > 0:
        cancion[0]()
        fname = cancion[0].__name__
        if fname in efectos and countRepetitions(fname,cancion) == efectos[fname]["vuelta"]:
            efectos[fname]["efecto"]()
        Clock.schedule(lambda : reproducir(cancion[1:],efectos,reset,start+8),start + 8)

start = Clock.mod(8) - 0.1
Clock.schedule(lambda : reproducir(cancion,efectos,reset,start), start)

v2 >> loop("estribillo2",P[0:32],amp=6)

a3()

v1.reload()

v1 >> loop("lala2",P[32:40],amp=6)

a5()

estribillo = [ a8, a9, a10, a11, a12, a13, a14, a15 ]

a12()

v3 >> loop('estribillo2',P[0:32], amp=6, slide=0.05, delay=0.1)




b1 >> play('x ')

b2 >> play('( O) ')

d0.vib=0

d1.room=0.4

d1.pan=PWhite(-1,1)

d1.formant=[0,0,1,2]

d1.oct=(4,5)

d1.drive=0.1
d1.lpf=777
d1.hpf=linvar([1,1333],4)

def abajo():
    b_all.lpf=500
    b_all.solo()
def arriba():
    b_all.lpf=0
    b_all.solo(0)
def abajoarriba(intervalo):
    abajo()
    Clock.future(intervalo, lambda: arriba())

abajoarriba(2)

d1.drive=var([0.2],8)
d1.formant=var([10,0],8)

b2 >> play("x ")
